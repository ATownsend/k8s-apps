{{- if .Values.schemaRegistry.enabled -}}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "schema-registry.fullname" . }}
  labels:
    heritage: "{{ .Release.Service }}"
    release: "{{ .Release.Name }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app: {{ template "schema-registry.fullname" . }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "schema-registry.fullname" . }}
    spec:
      containers:
      - name: schema-registry
        image: "{{ .Values.schemaRegistry.image.repository }}{{ .Values.schemaRegistry.image.name }}:{{ .Values.schemaRegistry.image.tag }}"
        imagePullPolicy: {{ .Values.schemaRegistry.image.pullPolicy }}
        env:
        - name: SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL
          value: {{ template "kafka-stack.zk-address" . }}
        ports:
        - name: api
          containerPort: {{ .Values.schemaRegistry.port }}
        resources:
{{ toYaml .Values.schemaRegistry.resources | indent 12 }}
      {{ if .Values.schemaRegistry.ui.enabled }}
      - name: schema-registry-ui
        image: "{{ .Values.schemaRegistry.ui.image.repository }}{{ .Values.schemaRegistry.ui.image.name }}:{{ .Values.schemaRegistry.ui.image.tag }}"
        imagePullPolicy: {{ .Values.schemaRegistry.ui.image.pullPolicy }}
        env:
        - name: SCHEMAREGISTRY_URL
          value: {{ template "schema-registry.address" . }}
        - name: PROXY
          value: "true"
        ports:
        - name: ui
          containerPort: {{ .Values.schemaRegistry.ui.port }}
      {{- end -}}
{{- end -}}
