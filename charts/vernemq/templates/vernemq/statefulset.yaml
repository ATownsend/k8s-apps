apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "vernemq.fullname" . }}
  labels:
    app: {{ template "vernemq.fullname" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  serviceName: {{ template "vernemq.fullname" . }}
  replicas: {{ .Values.config.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "vernemq.fullname" . }}
      annotations:
        {{- if .Values.prometheusExporter.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "8888"
        {{- end }}
        {{- if eq .Values.antiAffinity "hard" }}
        scheduler.alpha.kubernetes.io/affinity: >
          {
            "podAntiAffinity": {
              "requiredDuringSchedulingIgnoredDuringExecution": [{
                "labelSelector": {
                  "matchExpressions": [{
                    "key": "app",
                    "operator": "In",
                    "values": ["{{ template "vernemq.fullname" . }}"]
                  }]
                },
                "topologyKey": "kubernetes.io/hostname"
              }]
            }
          }
        {{- else if eq .Values.antiAffinity "soft" }}
        scheduler.alpha.kubernetes.io/affinity: >
            {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [{
                  "weight": 100,
                  "preference": {
                    "matchExpressions": [{
                      "key": "app",
                      "operator": "In",
                      "values": ["{{ template "vernemq.fullname" . }}"]
                    }]
                  },
                  "topologyKey": "kubernetes.io/hostname"
                }]
              }
            }
        {{- end }}
    spec:
      containers:
      - name: vernemq
        image:  {{ .Values.image.repository }}{{ .Values.image.name }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        env:
        - name: DOCKER_VERNEMQ_DISCOVERY_NODE
          value: {{ template "vernemq.fullname" . }}-0.{{ template "vernemq.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local
        - name: DOCKER_VERNEMQ_ALLOW_ANONYMOUS
          value: "on"
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        livenessProbe:
          exec:
            command: [ "/bin/bash", "-c", "vmq-admin cluster show | grep -E ${POD_IP}\\|\\s+true" ]
          initialDelaySeconds: {{ .Values.probeInitialDelaySeconds }}
          periodSeconds: {{ .Values.probePeriodSeconds }}
        readinessProbe:
          exec:
            command: [ "/bin/bash", "-c", "vmq-admin cluster show | grep -E ${POD_IP}\\|\\s+true" ]
          initialDelaySeconds: {{ .Values.probeInitialDelaySeconds }}
          periodSeconds: {{ .Values.probePeriodSeconds }}
        ports:
        - name: mqtt
          containerPort: 1883
        - name: websocket
          containerPort: 8080
        volumeMounts:
        {{- if .Values.logCollector.enabled }}
        - name: logdir
          mountPath: /var/log/vernemq
        {{- end }}
        - name: data
          mountPath: /var/lib/vernemq
      {{- if .Values.logCollector.enabled }}
      - name: filebeat
        image: "{{ .Values.logCollector.image.repository }}{{ .Values.logCollector.image.name }}:{{ .Values.logCollector.image.tag }}"
        imagePullPolicy: {{ .Values.logCollector.image.pullPolicy | quote }}
        volumeMounts:
        - name: filebeat-config
          mountPath: /etc/filebeat
        - name: logdir
          mountPath: /var/log/vernemq
        command:
          - "filebeat"
          - "-c"
          - "/etc/filebeat/filebeat.yml"
          - "-e"
          - "-d"
          - "\"*\""
      {{- end }}
      volumes:
        {{- if eq .Values.persistence.type "emptyDir" }}
        - name: data
          emptyDir: {}
        {{- else if eq .Values.persistence.type "hostPath" }}
        - name: data
          hostPath:
            path: "{{ .Values.persistence.hostPath }}"
        {{- end }}
        {{- if .Values.logCollector.enabled }}
        - name: filebeat-config
          configMap:
            name: {{ printf "vernemq-fb-%s" .Release.Name | trunc 63 | trimSuffix "-" }}
            items:
              - key: filebeat-yml
                path: filebeat.yml
        - name: logdir
          emptyDir: {}
        {{- end }}

  {{- if eq .Values.persistence.type "PersistentVolumeClaim" }}
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app: {{ template "vernemq.fullname" . }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
      {{- if .Values.persistence.storageClass }}
      annotations:
        volume.beta.kubernetes.io/storage-class: {{ .Values.persistence.storageClass }}
      {{- end }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.persistence.volumeSize }}
  {{- end }}
