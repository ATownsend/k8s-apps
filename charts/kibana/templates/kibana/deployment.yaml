{{ $url := include "kib-es-url" . }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "kib-fullname" . }}
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app: {{ template "kib-fullname" . }}
spec:
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      name: {{ template "kib-fullname" . }}
      labels:
        heritage: {{ .Release.Service | quote }}
        release: {{ .Release.Name | quote }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        app: {{ template "kib-fullname" . }}
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
          {
              "name": "wait-for-es",
              "image": "{{ .Values.testImage.repository }}:{{ .Values.testImage.tag }}",
              "imagePullPolicy": {{ .Values.testImage.pullPolicy | quote }},
              "command": ["sh", "-c", "until [ $(curl -o /dev/null --silent -f {{ $url }}/; echo $?) -eq 0 ]; do sleep 10; done"]
          }
        ]'
    spec:
      containers:
      - name: kibana
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        command:
          - kibana
        ports:
          - containerPort: {{ .Values.port }}
        volumeMounts:
          - name: config
            mountPath: /usr/share/kibana/config
      volumes:
      - name: config
        configMap:
          name: {{ template "kib-cm-fullname" . }}
          items:
            - key: kibana-conf
              path: kibana.yml
