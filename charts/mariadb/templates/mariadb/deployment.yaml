apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "mariadb-fullname" . }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    app: {{ template "mariadb-fullname" . }}
spec:
  template:
    metadata:
      name: {{ template "mariadb-fullname" . }}
      labels:
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
        app: {{ template "mariadb-fullname" . }}
      annotations:
        {{- if .Values.mysqlExporter.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "9104"
        {{- end }}
        pod.alpha.kubernetes.io/init-containers: '
          [
            {
              "name": "copy-custom-config",
              "image": "{{ .Values.image.repository }}{{ .Values.image.name }}:{{ .Values.image.tag }}",
              "imagePullPolicy": {{ .Values.image.pullPolicy | quote }},
              "command": ["sh", "-c", "mkdir -p /bitnami/mariadb/conf && cp -n /bitnami/mariadb_config/my.cnf /bitnami/mariadb/conf/my_custom.cnf"],
              "volumeMounts": [
                {
                  "name": "config",
                  "mountPath": "/bitnami/mariadb_config"
                },
                {
                  "name": "data",
                  "mountPath": "/bitnami/mariadb"
                }
              ]
            }
          ]'
    spec:
      containers:
      - name: mariadb
        image: "{{ .Values.image.repository }}{{ .Values.image.name }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        env:
        - name: MARIADB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "mariadb-fullname" . }}
              key: mariadb-root-password
        - name: MARIADB_USER
          value: {{ .Values.credentials.user | quote }}
        - name: MARIADB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "mariadb-fullname" . }}
              key: mariadb-password
        - name: MARIADB_DATABASE
          value: {{ .Values.dbDatabase | quote }}
        - name: ALLOW_EMPTY_PASSWORD
          value: "yes"
        ports:
        - name: mysql
          containerPort: {{ .Values.port }}
        livenessProbe:
          exec:
            command:
            - mysqladmin
            - ping
          initialDelaySeconds: {{ .Values.probeInitialDelaySeconds }}
          timeoutSeconds: {{ .Values.probeTimeoutSeconds }}
        readinessProbe:
          exec:
            command:
            - mysqladmin
            - ping
          initialDelaySeconds: {{ .Values.probeInitialDelaySeconds }}
          timeoutSeconds: {{ .Values.probeTimeoutSeconds }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
        - name: data
          mountPath: /bitnami/mariadb
      {{- if .Values.mysqlExporter.enabled }}
      - name: mysql-exporter
        image: "{{ .Values.mysqlExporter.image.repository }}{{ .Values.mysqlExporter.image.name }}:{{ .Values.mysqlExporter.image.tag }}"
        imagePullPolicy: {{ .Values.mysqlExporter.image.pullPolicy | quote }}
        command:
        - sh
        - -cx
        - |
          sleep {{ mul .Values.probeInitialDelaySeconds 2 }}
          cat > ~/.my.cnf << EOF
          [client]
          user=root
          password={{ .Values.credentials.rootPassword }}
          host={{ template "mariadb-fullname" . }}
          port={{ .Values.port }}
          EOF
          ./bin/mysqld_exporter{{ range .Values.mysqlExporter.flags }} {{ . }}{{ end }}
        # this port hardcoded in mysqld_exporter
        ports:
        - containerPort: 9104
      {{- end }}
      volumes:
      - name: config
        configMap:
          name: {{ template "mariadb-fullname" . }}
      - name: data
      {{- if eq .Values.persistence.type "PersistentVolumeClaim" }}
        persistentVolumeClaim:
          claimName: {{ template "mariadb-fullname-pvc" . }}
      {{- else if eq .Values.persistence.type "hostPath" }}
        hostPath:
          path: {{ .Values.persistence.hostPath | quote }}
      {{- else if eq .Values.persistence.type "emptyDir" }}
        emptyDir: {}
      {{- end -}}
