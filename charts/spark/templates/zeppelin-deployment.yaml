apiVersion: v1
kind: Service
metadata:
  name: {{ template "zeppelin-fullname" . }}
  labels:
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    component: "{{.Release.Name}}-{{.Values.Zeppelin.Component}}"
spec:
  type: {{ .Values.Zeppelin.serviceType }}
  ports:
    - port: {{ .Values.Zeppelin.ServicePort }}
      targetPort: {{ .Values.Zeppelin.ContainerPort }}
      {{- if .Values.Zeppelin.nodePort }}
      nodePort: {{.Values.Zeppelin.nodePort}}
      {{- end }}
{{- if .Values.Zeppelin.externalIPs }}
  externalIPs:
{{ toYaml .Values.Zeppelin.externalIPs | indent 4 }}
{{- end }}
  selector:
    component: "{{.Release.Name}}-{{.Values.Zeppelin.Component}}"
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "zeppelin-fullname" . }}
  labels:
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    component: "{{.Release.Name}}-{{.Values.Zeppelin.Component}}"
spec:
  replicas: {{default 1 .Values.Zeppelin.Replicas}}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      component: "{{.Release.Name}}-{{.Values.Zeppelin.Component}}"
  template:
    metadata:
      labels:
        heritage: {{.Release.Service | quote }}
        release: {{.Release.Name | quote }}
        chart: "{{.Chart.Name}}-{{.Chart.Version}}"
        component: "{{.Release.Name}}-{{.Values.Zeppelin.Component}}"
    spec:
      containers:
        - name: {{ template "zeppelin-fullname" . }}
          image: "{{.Values.Zeppelin.Image}}:{{.Values.Zeppelin.ImageTag}}"
          imagePullPolicy: {{ .Values.Zeppelin.imagePullPolicy }}
          command:
            - zeppelin.sh
          env:
            - name: MASTER
              value: spark://{{ template "master-fullname" . }}:{{ .Values.Master.ServicePort }}
          resources:
            requests:
              cpu: {{.Values.Zeppelin.Cpu}}
          {{- if .Values.logCollector.enabled }}
          volumeMounts:
            {{- range $idx, $path := .Values.logCollector.zeppelin.logsPaths }}
            - name: logdir-{{ $idx }}
              mountPath: {{ $path }}
            {{- end }}
          {{- end }}
        {{- if .Values.logCollector.enabled }}
        - name: filebeat
          image: "{{ .Values.logCollector.image.repository }}:{{ .Values.logCollector.image.tag }}"
          imagePullPolicy: {{ .Values.logCollector.image.pullPolicy | quote }}
          volumeMounts:
            - name: filebeat-config
              mountPath: /etc/filebeat
            {{- range $idx, $path := .Values.logCollector.zeppelin.logsPaths }}
            - name: logdir-{{ $idx }}
              mountPath: {{ $path }}
            {{- end }}
          command:
            - "filebeat"
            - "-c"
            - "/etc/filebeat/filebeat.yml"
            - "-e"
            - "-d"
            - "\"*\""
        {{- end }}
      {{- if .Values.logCollector.enabled }}
      volumes:
        - name: filebeat-config
          configMap:
            name: {{ printf "fb-zeppelin-%s" .Release.Name | trunc 63 | trimSuffix "-" }}
            items:
              - key: filebeat-yml
                path: filebeat.yml
        {{- range $idx, $path := .Values.logCollector.zeppelin.logsPaths }}
        - name: logdir-{{ $idx }}
          emptyDir: {}
        {{- end }}
      {{- end }}