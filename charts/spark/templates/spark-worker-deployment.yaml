apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "worker-fullname" . }}
  labels:
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    component: "{{.Release.Name}}-{{.Values.Worker.Component}}"
spec:
  replicas: {{default 1 .Values.Worker.Replicas}}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      component: "{{.Release.Name}}-{{.Values.Worker.Component}}"
  template:
    metadata:
      labels:
        heritage: {{.Release.Service | quote }}
        release: {{.Release.Name | quote }}
        chart: "{{.Chart.Name}}-{{.Chart.Version}}"
        component: "{{.Release.Name}}-{{.Values.Worker.Component}}"
      {{- if .Values.monitoring }}
      annotations:
        prometheus.io/scrape: "true"
      {{- end }}
    spec:
      containers:
        - name: {{ template "worker-fullname" . }}
          image: "{{.Values.Worker.Image}}:{{.Values.Worker.ImageTag}}"
          imagePullPolicy: {{ .Values.Worker.imagePullPolicy }}
          command:
            - /usr/local/spark/sbin/start-slave.sh
            - spark://{{ template "master-fullname" . }}:{{ .Values.Master.ServicePort }}
          resources:
            requests:
              cpu: "{{.Values.Worker.Cpu}}"
              memory: "{{.Values.Worker.Memory}}"
          env:
          - name: SPARK_DAEMON_MEMORY
            value: {{ default "1g" .Values.Worker.DaemonMemory | quote }}
          - name: SPARK_WORKER_MEMORY
            value: {{ default "1g" .Values.Worker.ExecutorMemory | quote }}
          - name: SPARK_NO_DAEMONIZE
            value: "1"
          {{- if .Values.monitoring }}
          - name: SPARK_DAEMON_JAVA_OPTS
            value: "-javaagent:/usr/local/spark/jmx_prometheus_javaagent-0.9.jar=7072:/usr/local/spark/conf/spark-jmx.yml"
          {{- end }}
          {{- if .Values.monitoring }}
          ports:
          - name: jmx-agent
            containerPort: 7072
          {{- end }}
          volumeMounts:
            - name: spark-conf
              mountPath: /usr/local/spark/conf/
      volumes:
        - name: spark-conf
          configMap:
            name: {{ printf "spark-conf-%s" .Release.Name | trunc 24 }}

