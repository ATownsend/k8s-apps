apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "zipkin.fullname" . }}
  labels:
    heritage: "{{ .Release.Service }}"
    release: "{{ .Release.Name }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app: {{ template "zipkin.fullname" . }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "zipkin.fullname" . }}
      annotations:
        {{- if .Values.prometheusExporter.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.port }}"
        prometheus.io/path: "/prometheus"
        {{- end }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}{{ .Values.image.name }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        {{- range $name, $value := .Values.env }}
        - name: {{ $name }}
          value: {{ $value | quote}}
        {{- end  }}
        - name: QUERY_PORT
          value: "{{ .Values.port }}"
        {{- if .Values.cassandra.deployChart }}
        - name: STORAGE_TYPE
          value: cassandra3
        - name: CASSANDRA3_CONTACT_POINTS
          value: "{{ template "zipkin.cassandra-address" . }}"
        {{- end }}
        readinessProbe:
          httpGet:
            path: /health
            port: {{ .Values.port  }}
          initialDelaySeconds: {{ .Values.probeInitialDelaySeconds }}
          timeoutSeconds: {{ .Values.probeTimeoutSeconds }}
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.port  }}
          initialDelaySeconds: {{ .Values.probeInitialDelaySeconds }}
          timeoutSeconds: {{ .Values.probeTimeoutSeconds }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
