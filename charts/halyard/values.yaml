# Run halyard as a daemon process (and as deployment)
# Job will be created and per each install/upgrade otherwise
daemon: false
command: "hal deploy apply"

prepareKubeconfig:
  enabled: true
  # Name of the context, user and cluster that will be generated
  context: default
  user: default
  cluster: default
  # The namespace Spinnaker will be deployed into. The namespace of the
  # release will be used by default. Change if necessary.
  # NOTE: The "location" parameter under "deploymentEnvironment" will be
  # set by that option.
  namespace:

image:
  repository: gcr.io/spinnaker-marketplace/
  name: halyard
  tag: 1.5.0
  pullPolicy: IfNotPresent

service:
  # K8s service to expose deck
  ui:
    type: LoadBalancer # or ClusterIP or NodePort

    port: 9000
    nodePort: ""

    loadBalancerIP: ""
    loadBalancerSourceRanges: []

    annotations: {}
  # K8s service to expose gate
  api:
    type: LoadBalancer # or ClusterIP or NodePort

    port: 8084
    nodePort: ""

    loadBalancerIP: ""
    loadBalancerSourceRanges: []

    annotations: {}

# If enabled, Minio chart will be deployed and configured as
# a storage for Spinnaker
minio:
  deployChart: true

# If enabled, Jenkins chart will be deployed and configured
# for Spinnaker
jenkins:
  deployChart: true
  Master:
    UseSecurity: false

rbac:
  enabled: true

# Halconfig file will appear at ~/.hal/config
halconfig: |
  currentDeployment: default
  deploymentConfigurations:
  - name: default
    version: 1.8.4
    providers:
      dockerRegistry:
        enabled: true
        accounts:
        - name: dockerhub
          requiredGroupMembership: []
          providerVersion: V1
          address: https://index.docker.io
          email: fake.email@spinnaker.io
          repositories:
          - library/nginx
        primaryAccount: dockerhub
      kubernetes:
        enabled: true
        accounts:
        - name: local
          requiredGroupMembership: []
          providerVersion: V1
          dockerRegistries:
          - accountName: dockerhub
            namespaces: []
          configureImagePullSecrets: true
          namespaces: []
          omitNamespaces: []
          kubeconfigFile: /home/spinnaker/.kube/config
          oauthScopes: []
          oAuthScopes: []
        primaryAccount: local
    deploymentEnvironment:
      size: SMALL
      type: Distributed
      accountName: local
      updateVersions: true
    persistentStorage:
      s3:
        bucket: spin-bucket
    features:
      auth: false
      fiat: false
      chaos: false
      entityTags: false
      jobs: true
      pipelineTemplates: true
      artifacts: false
    timezone: America/Los_Angeles

files:
  - path: /home/spinnaker/.hal/default/service-settings/deck.yml
    content: |
      env:
        API_HOST: "http://spin-gate:8084"
  - path: /home/spinnaker/.hal/default/service-settings/gate.yml
    content: |
      overrideBaseUrl: "/gate"
  - path: /home/spinnaker/.hal/default/profiles/front50-local.yml
    content: |
      spinnaker.s3.versioning: false

# Creates service accounts in Front50 and runs Fiat sync
# after Spinnaker deployment
serviceAccounts:
#  - name: example
#    memberOf: ["example"]
