# If enabled, will generate the in-cluster kubeconfig (located at
# /root/.kube/config) that might be used for the distributed installation
# https://www.spinnaker.io/setup/install/environment/#distributed
prepareKubeconfig:
  enabled: true
  # Name of the context, user and cluster that will be generated
  context: default
  user: default
  cluster: default

image:
  repository: gcr.io/spinnaker-marketplace/
  name: halyard
  tag: stable
  pullPolicy: IfNotPresent

service:
  type: NodePort # or ClusterIP or LoadBalancer

  nodePort: ""

  loadBalancerIP: ""
  loadBalancerSourceRanges: []

  annotations: {}

hdfs:
  # if disabled, subchart will not be deployed
  deployChart: false
  path: /

  # these values should be set if subchart deployment is disabled:
  addresses:
    namenode: ""

files:
  - path: /root/.hal/config
    content: |
      currentDeployment: default
      deploymentConfigurations:
      - name: default
        version: 1.6.0
        providers:
          appengine:
            enabled: false
            accounts: []
          aws:
            enabled: false
            accounts: []
            defaultKeyPairTemplate: '{{name}}-keypair'
            defaultRegions:
            - name: us-west-2
            defaults:
              iamRole: BaseIAMRole
          azure:
            enabled: false
            accounts: []
            bakeryDefaults:
              templateFile: azure-linux.json
              baseImages: []
          dcos:
            enabled: false
            accounts: []
            clusters: []
          dockerRegistry:
            enabled: true
            accounts:
            - name: my-docker-registry
              requiredGroupMembership: []
              providerVersion: V1
              address: https://index.docker.io
              email: fake.email@spinnaker.io
              cacheIntervalSeconds: 30
              clientTimeoutMillis: 60000
              cacheThreads: 1
              paginateSize: 100
              sortTagsByDate: false
              trackDigests: false
              insecureRegistry: false
              repositories:
              - library/nginx
            primaryAccount: my-docker-registry
          google:
            enabled: false
            accounts: []
            bakeryDefaults:
              templateFile: gce.json
              baseImages: []
              zone: us-central1-f
              network: default
              useInternalIp: false
          kubernetes:
            enabled: true
            accounts:
            - name: my-k8s-account
              requiredGroupMembership: []
              providerVersion: V1
              dockerRegistries:
              - accountName: my-docker-registry
                namespaces: []
              configureImagePullSecrets: true
              namespaces: []
              omitNamespaces: []
              kubeconfigFile: /root/.kube/config
              oauthScopes: []
              oAuthScopes: []
            primaryAccount: my-k8s-account
          openstack:
            enabled: false
            accounts: []
            bakeryDefaults:
              baseImages: []
          oraclebmcs:
            enabled: false
            accounts: []
        deploymentEnvironment:
          size: SMALL
          type: Distributed
          accountName: my-k8s-account
          updateVersions: true
          consul:
            enabled: false
          vault:
            enabled: false
          customSizing: {}
          gitConfig:
            upstreamUser: spinnaker
        persistentStorage:
          persistentStoreType: s3
          azs: {}
          gcs:
            rootFolder: front50
          redis: {}
          s3:
            bucket: spin-bucket
            rootFolder: front50
            endpoint: http://minio-minio.default:9000
            accessKeyId: miniokey
            secretAccessKey: miniosecret
          oraclebmcs: {}
        features:
          auth: false
          fiat: false
          chaos: false
          entityTags: false
          jobs: false
          pipelineTemplates: true
          artifacts: true
        metricStores:
          datadog:
            enabled: false
          prometheus:
            enabled: false
            add_source_metalabels: true
          stackdriver:
            enabled: false
          period: 30
          enabled: false
        notifications:
          slack:
            enabled: false
        timezone: America/Los_Angeles
        ci:
          jenkins:
            enabled: false
            masters: []
          travis:
            enabled: false
            masters: []
        security:
          apiSecurity:
            ssl:
              enabled: false
          uiSecurity:
            ssl:
              enabled: false
          authn:
            oauth2:
              enabled: false
              client: {}
              resource: {}
              userInfoMapping: {}
            saml:
              enabled: false
            ldap:
              enabled: false
            x509:
              enabled: false
            enabled: false
          authz:
            groupMembership:
              service: EXTERNAL
              google:
                roleProviderType: GOOGLE
              github:
                roleProviderType: GITHUB
              file:
                roleProviderType: FILE
            enabled: false
        artifacts:
          gcs:
            enabled: false
            accounts: []
          github:
            enabled: false
            accounts: []
        pubsub:
          google:
            enabled: false
            subscriptions: []
