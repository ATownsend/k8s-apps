apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "halyard.fullname" . }}
  labels:
    app: {{ template "halyard.fullname" . }}
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        app: {{ template "halyard.fullname" . }}
    spec:
      restartPolicy: Never
      {{- if .Values.prepareKubeconfig.enabled }}
      initContainers:
      - name: kubeconfig
        image: "{{ .Values.image.repository }}{{ .Values.image.name }}:{{ .Values.image.tag }}"
        command:
        - sh
        - -cex
        - |
          kubectl config set-cluster {{ .Values.prepareKubeconfig.cluster }} --server=https://kubernetes.default --certificate-authority=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          token=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
          kubectl config set-credentials {{ .Values.prepareKubeconfig.user }} --token=$token
          kubectl config set-context {{ .Values.prepareKubeconfig.context }} --cluster={{ .Values.prepareKubeconfig.cluster }} --user={{ .Values.prepareKubeconfig.user }}
          kubectl config use-context {{ .Values.prepareKubeconfig.context }}
        volumeMounts:
          - mountPath: /root/.kube/
            name: kubeconfig
      {{- end }}
      containers:
      - name: daemon
        image: "{{ .Values.image.repository }}{{ .Values.image.name }}:{{ .Values.image.tag }}"
        volumeMounts:
        {{- range $id, $file := .Values.files }}
        - mountPath: {{ index $file "path" }}
          name: file-{{ $id }}
          subPath: {{ regexFind "[^/]+$" (index $file "path") }}
        {{- end }}
        {{- if .Values.prepareKubeconfig.enabled }}
        - mountPath: /root/.kube/
          name: kubeconfig
        {{- end }}
      - name: apply
        image: "{{ .Values.image.repository }}{{ .Values.image.name }}:{{ .Values.image.tag }}"
        command:
        - sh
        - -cex
        - |
          until hal --ready; do sleep 2; done
          hal deploy apply
      volumes:
      {{- range $id, $file := .Values.files }}
      - name: file-{{ $id }}
        configMap:
          name: {{ template "halyard.fullname" $ }}-file-{{ $id }}
      {{- end }}
      {{- if .Values.prepareKubeconfig.enabled }}
      - name: kubeconfig
        emptyDir: {}
      {{- end }}
