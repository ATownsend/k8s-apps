apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "halyard.fullname" . }}
  labels:
    app: {{ template "halyard.fullname" . }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        app: {{ template "halyard.fullname" . }}
    spec:
      restartPolicy: Never
      containers:
      - name: daemon
        image: "{{ .Values.image.repository }}{{ .Values.image.name }}:{{ .Values.image.tag }}"
        command:
        - sh
        - -cex
        - |
          mkdir -p /root/.hal /var/log/halyard
          cp /root/tmp/halconfig /root/.hal/config
          /opt/halyard/bin/halyard > /var/log/halyard/halyard.log 2>&1 &
          {{- if .Values.prepareKubeconfig.enabled }}
          kubectl config set-cluster {{ .Values.prepareKubeconfig.cluster }} --server=https://kubernetes.default --certificate-authority=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          token=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
          kubectl config set-credentials {{ .Values.prepareKubeconfig.user }} --token=$token
          kubectl config set-context {{ .Values.prepareKubeconfig.context }} --cluster={{ .Values.prepareKubeconfig.cluster }} --user={{ .Values.prepareKubeconfig.user }}
          kubectl config use-context {{ .Values.prepareKubeconfig.context }}
          {{- end }}
          until hal --ready; do sleep 2; done
          {{- if .Values.minio.deployChart }}
          hal config storage edit --type s3
          echo {{ .Values.minio.secretKey }} | hal config storage s3 edit --endpoint {{ template "halyard.minio-address" . }} --access-key-id {{ .Values.minio.accessKey }} --secret-access-key
          {{- end }}
          {{- if .Values.prepareKubeconfig.enabled }}
          hal config deploy edit --location {{ template "halyard.spinnaker-namespace" . }}
          {{- end }}
          hal deploy apply
        volumeMounts:
        {{- range $id, $file := .Values.files }}
        - mountPath: {{ index $file "path" }}
          name: file-{{ $id }}
          subPath: {{ regexFind "[^/]+$" (index $file "path") }}
        {{- end }}
        - mountPath: /root/tmp
          name: halconfig
      volumes:
      {{- range $id, $file := .Values.files }}
      - name: file-{{ $id }}
        configMap:
          name: {{ template "halyard.fullname" $ }}-file-{{ $id }}
      {{- end }}
      - name: halconfig
        configMap:
          name: {{ template "halyard.fullname" . }}-halconfig
