apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  annotations:
    sidecar.istio.io/status: injected-version-releng@0d29a2c0d15f-0.2.12-998e0e00d375688bcb2af042fc81a60ce5264009
  labels:
    heritage: "{{ .Release.Service }}"
    release: "{{ .Release.Name }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app: {{ template "fullname" . }}
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxUnavailable: 0
  template:
    metadata:
      {{ if .Values.istio.enabled }}
      annotations:
        sidecar.istio.io/status: injected-version-releng@0d29a2c0d15f-0.2.12-998e0e00d375688bcb2af042fc81a60ce5264009
      {{ end }}
      labels:
        app: {{ template "fullname" . }}
        chartName: {{ .Chart.Name }}
    spec:
      {{ if .Values.istio.enabled }}
      initContainers:
      - args:
        - -p
        - "15001"
        - -u
        - "1337"
        image: docker.io/istio/proxy_init:0.2.12
        imagePullPolicy: IfNotPresent
        name: istio-init
        resources: {}
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: true
      - args:
        - -c
        - sysctl -w kernel.core_pattern=/etc/istio/proxy/core.%e.%p.%t && ulimit -c
          unlimited
        command:
        - /bin/sh
        image: alpine
        imagePullPolicy: IfNotPresent
        name: enable-core-dump
        resources: {}
        securityContext:
          privileged: true
      volumes:
      - emptyDir:
          medium: Memory
          sizeLimit: "0"
        name: istio-envoy
      - name: istio-certs
        secret:
          optional: true
          secretName: istio.default
      {{ end }}
      containers:
      {{ if .Values.istio.enabled }}
      - args:
        - proxy
        - sidecar
        - -v
        - "2"
        - --configPath
        - /etc/istio/proxy
        - --binaryPath
        - /usr/local/bin/envoy
        - --serviceCluster
        - sleep
        - --drainDuration
        - 45s
        - --parentShutdownDuration
        - 1m0s
        - --discoveryAddress
        - istio-pilot.ap:8080
        - --discoveryRefreshDelay
        - 1s
        - --zipkinAddress
        - istio-zipkin.ap:9411
        - --connectTimeout
        - 10s
        - --statsdUdpAddress
        - istio-mixer.ap:9125
        - --proxyAdminPort
        - "15000"
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: docker.io/istio/proxy_debug:0.2.12
        imagePullPolicy: IfNotPresent
        name: istio-proxy
        resources: {}
        securityContext:
          privileged: true
          readOnlyRootFilesystem: false
          runAsUser: 1337
        volumeMounts:
        - mountPath: /etc/istio/proxy
          name: istio-envoy
        - mountPath: /etc/certs/
          name: istio-certs
          readOnly: true
      {{ end }}
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}{{ .Values.image.name }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: TWEEVIZ_STORAGE
          value: {{ .Values.storage }}
        {{- if eq .Values.storage "cassandra" }}
        - name: TWEEVIZ_CASSANDRA_ADDRESS
          {{- if .Values.cassandra.deployChart }}
          value: {{- printf "cassandra-%s" .Release.Name | trunc 55 | trimSuffix "-" }}
          {{- else }}
          value: "{{ (split ":" .Values.cassandra.addresses.cassandra)._0 }}"
          {{- end }}
        - name: TWEEVIZ_CASSANDRA_KEYSPACE
          value: "{{ .Values.cassandra.keyspace }}"
        - name: TWEEVIZ_CASSANDRA_TABLE
          value: "{{ .Values.cassandra.table }}"
        {{- end  }}
        {{- if eq .Values.storage "hdfs" }}
        - name: TWEEVIZ_HDFS_ADDRESS
          {{- if .Values.hdfs.deployChart }}
          value: {{ printf "hdfs-namenode-%s" .Release.Name  | trunc 55 | trimSuffix "-" }}
          {{- else }}
          value: "{{ (split ":" .Values.hdfs.addresses.namenode)._0 }}"
          {{- end }}
        - name: TWEEVIZ_HDFS_PORT
          {{- if .Values.hdfs.deployChart }}
          value: "{{ .Values.hdfs.namenode.port }}"
          {{- else }}
          value: "{{ (split ":" .Values.hdfs.addresses.namenode)._1 }}"
          {{- end }}
        - name: TWEEVIZ_HDFS_PATH
          value: "{{ .Values.hdfs.path }}"
        {{- end }}
        - name: TWEEVIZ_MIN_POPULARITY
          value: "{{ .Values.minPopularity }}"
        - name: TWEEVIZ_TOP_LIST_SIZE
          value: "{{ .Values.topListSize }}"
        - name: TWEEVIZ_HEADER
          value: "{{ .Values.header }}"
        readinessProbe:
          exec:
            command: [ "/bin/sh", "-ce", "wget -O - -T {{ .Values.probePeriodSeconds }} -q localhost:{{ .Values.port }}/stats | grep weight" ]
          initialDelaySeconds: {{ .Values.probeInitialDelaySeconds }}
          periodSeconds: {{ .Values.probePeriodSeconds }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
