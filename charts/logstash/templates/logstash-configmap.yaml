apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "component-fullname" . }}-cm
  labels:
    heritage: {{.Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app: {{ template "component-fullname" . }}
data:
  logstash-conf: |
    input {
        beats {
          port => 5043
        }
    }

    filter {
        if ([fields][log_host] == "kafka") {
            grok {
                match => {
                    "message" => [
                        "\[%{TIMESTAMP_ISO8601:message_time}\] %{LOGLEVEL:log_level} \[%{GREEDYDATA:source}\]\: %{GREEDYDATA:message} \(%{GREEDYDATA:class}\)",
                        "\[%{GREEDYDATA:server_telemetry}\]"
                    ]
                }
                overwrite => [ "source", "message" ]
                add_field => {
                    "received_at" => "%{@timestamp}"
                    "received_from" => "%{host}"
                }
                remove_field => [
                    "beat",
                    "input_type",
                    "offset",
                    "fields",
                    "tags",
                    "host",
                    "type"
                ]
            }
        } else {
            grok {
                match => {
                    "message" => ["%{GREEDYDATA:message}"]
                }
                overwrite => [ "message" ]
                add_field => {
                    "received_from" => "%{host}"
                }
            }
        }
    }

    output {
        elasticsearch {
            hosts => ["{{ .Values.elasticsearch.service }}:{{ .Values.elasticsearch.port }}"]
            index => "%{received_from}-%{+MM.dd.YYYY}"
        }
        stdout { codec => json }
    }
