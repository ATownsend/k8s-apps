{{ $url := include "ls-es-url" . }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "ls-fullname" . }}
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app: {{ template "ls-fullname" . }}
spec:
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      name: {{ template "ls-fullname" . }}
      labels:
        heritage: {{ .Release.Service | quote }}
        release: {{ .Release.Name | quote }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        app: {{ template "ls-fullname" . }}
      annotations:
    spec:
      initContainers:
      - name: wait-for-es
        image: '{{ .Values.testImage.repository }}{{ .Values.testImage.name }}:{{ .Values.testImage.tag }}'
        imagePullPolicy: {{ .Values.testImage.pullPolicy }}
        command:
        - sh
        - -c
        - until [ $(curl -o /dev/null --silent -f {{ $url }}/; echo $?) -eq 0 ]; do sleep 10; done
      containers:
      - name: logstash
        env:
        - name: LS_JAVA_OPTS
          value: "-Xms{{ .Values.heapSize }} -Xmx{{ .Values.heapSize }} -Djava.net.preferIPv4Stack=true"
        image: "{{ .Values.image.repository }}{{ .Values.image.name }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        command:
        - "logstash"
        - "-f"
        - "/etc/logstash/logstash.conf"
        resources:
{{ toYaml .Values.resources | indent 10 }}
        ports:
        - containerPort: {{ .Values.port }}
        volumeMounts:
        - name: config
          mountPath: /etc/logstash
      volumes:
      - name: config
        configMap:
          name: {{ template "ls-cm-fullname" . }}
          items:
            - key: logstash-conf
              path: logstash.conf
