apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "akka.seed.fullname" . }}
  labels:
    heritage: "{{ .Release.Service }}"
    release: "{{ .Release.Name }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app: {{ template "akka.seed.fullname" . }}
spec:
  serviceName: {{ template "akka.seed.fullname" . }}
  replicas: {{ .Values.seed.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "akka.seed.fullname" . }}
      annotations:
        {{- if eq .Values.seed.antiAffinity "hard" }}
        scheduler.alpha.kubernetes.io/affinity: >
            {
              "podAntiAffinity": {
                "requiredDuringSchedulingIgnoredDuringExecution": [{
                  "labelSelector": {
                    "matchExpressions": [{
                      "key": "app",
                      "operator": "In",
                      "values": ["{{ template "akka.seed.fullname" . }}"]
                    }]
                  },
                  "topologyKey": "kubernetes.io/hostname"
                }]
              }
            }
        {{- else if eq .Values.seed.antiAffinity "soft" }}
        scheduler.alpha.kubernetes.io/affinity: >
            {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [{
                  "weight": 100,
                  "preference": {
                    "matchExpressions": [{
                      "key": "app",
                      "operator": "In",
                      "values": ["{{ template "akka.seed.fullname" . }}"]
                    }]
                  },
                  "topologyKey": "kubernetes.io/hostname"
                }]
              }
            }
        {{- end }}
    spec:
      containers:
        - name: seed
          image: "{{ .Values.image.repository }}{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          env:
            - name: AKKA_PORT
              value: "{{ .Values.port }}"
            - name: AKKA_MANAGEMENT_PORT
              value: "{{ .Values.managementPort }}"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: JAVA_TOOL_OPTIONS
              valueFrom:
                configMapKeyRef:
                  name: "{{ template "akka.fullname" . }}"
                  key: java-opts
          command: ["/bin/sh", "-c", "AKKA_HOST_NAME=${POD_NAME}.{{ template "akka.seed.fullname" . }} java -jar /app.jar"]
          lifecycle:
            preStop:
              exec:
                command:
                - "sh"
                - "-ce"
                - |
                  url="127.0.0.1:${AKKA_MANAGEMENT_PORT}/members/akka.tcp://AkkaCluster@${POD_NAME}.{{ template "akka.seed.fullname" . }}:${AKKA_PORT}"
                  curl -X DELETE $url
                  until [ $(curl -s -o /dev/null -w "%{http_code}" $url) == "404" ]; do sleep 2; done
          resources:
{{ toYaml .Values.seed.resources | indent 12 }}